plugins {
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
    id "io.franzbecker.gradle-lombok" version "3.0.0"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation "com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.6.1"
    implementation "org.springframework.boot:spring-boot-configuration-processor"

    compile 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
    testAnnotationProcessor('org.projectlombok:lombok:1.18.8')


    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.apache.commons:commons-lang3'


    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // data base
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'com.querydsl:querydsl-jpa'
    implementation 'com.querydsl:querydsl-core'
    implementation 'com.querydsl:querydsl-apt'
    implementation 'com.h2database:h2'
    //    runtimeOnly 'com.h2database:h2'

    //jwt
    implementation "io.jsonwebtoken:jjwt-api:0.11.2"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:0.11.2"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:0.11.2"

}

test {
    useJUnitPlatform()
}

//querydsl 추가


def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
compileQuerydsl.doFirst { if(file(querydslDir).exists() ) delete(file(querydslDir)) }



test {
    exclude '**/*'
}

jar {
    manifest {
        attributes 'Main-class' : 'com.example.sample'
    }
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

